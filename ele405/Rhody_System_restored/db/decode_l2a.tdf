--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:20:18:35:29:SJ cbx_lpm_add_sub 2016:04:20:18:35:29:SJ cbx_lpm_compare 2016:04:20:18:35:29:SJ cbx_lpm_decode 2016:04:20:18:35:29:SJ cbx_mgl 2016:04:20:19:36:45:SJ cbx_nadder 2016:04:20:18:35:29:SJ cbx_stratix 2016:04:20:18:35:29:SJ cbx_stratixii 2016:04:20:18:35:29:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_l2a
( 
	data[4..0]	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3739w[2..0]	: WIRE;
	w_anode3753w[3..0]	: WIRE;
	w_anode3770w[3..0]	: WIRE;
	w_anode3780w[3..0]	: WIRE;
	w_anode3790w[3..0]	: WIRE;
	w_anode3800w[3..0]	: WIRE;
	w_anode3810w[3..0]	: WIRE;
	w_anode3820w[3..0]	: WIRE;
	w_anode3830w[3..0]	: WIRE;
	w_anode3842w[2..0]	: WIRE;
	w_anode3852w[3..0]	: WIRE;
	w_anode3863w[3..0]	: WIRE;
	w_anode3873w[3..0]	: WIRE;
	w_anode3883w[3..0]	: WIRE;
	w_anode3893w[3..0]	: WIRE;
	w_anode3903w[3..0]	: WIRE;
	w_anode3913w[3..0]	: WIRE;
	w_anode3923w[3..0]	: WIRE;
	w_anode3934w[2..0]	: WIRE;
	w_anode3944w[3..0]	: WIRE;
	w_anode3955w[3..0]	: WIRE;
	w_anode3965w[3..0]	: WIRE;
	w_anode3975w[3..0]	: WIRE;
	w_anode3985w[3..0]	: WIRE;
	w_anode3995w[3..0]	: WIRE;
	w_anode4005w[3..0]	: WIRE;
	w_anode4015w[3..0]	: WIRE;
	w_anode4026w[2..0]	: WIRE;
	w_anode4036w[3..0]	: WIRE;
	w_anode4047w[3..0]	: WIRE;
	w_anode4057w[3..0]	: WIRE;
	w_anode4067w[3..0]	: WIRE;
	w_anode4077w[3..0]	: WIRE;
	w_anode4087w[3..0]	: WIRE;
	w_anode4097w[3..0]	: WIRE;
	w_anode4107w[3..0]	: WIRE;
	w_data3737w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode4107w[3..3], w_anode4097w[3..3], w_anode4087w[3..3], w_anode4077w[3..3], w_anode4067w[3..3], w_anode4057w[3..3], w_anode4047w[3..3], w_anode4036w[3..3]), ( w_anode4015w[3..3], w_anode4005w[3..3], w_anode3995w[3..3], w_anode3985w[3..3], w_anode3975w[3..3], w_anode3965w[3..3], w_anode3955w[3..3], w_anode3944w[3..3]), ( w_anode3923w[3..3], w_anode3913w[3..3], w_anode3903w[3..3], w_anode3893w[3..3], w_anode3883w[3..3], w_anode3873w[3..3], w_anode3863w[3..3], w_anode3852w[3..3]), ( w_anode3830w[3..3], w_anode3820w[3..3], w_anode3810w[3..3], w_anode3800w[3..3], w_anode3790w[3..3], w_anode3780w[3..3], w_anode3770w[3..3], w_anode3753w[3..3]));
	w_anode3739w[] = ( (w_anode3739w[1..1] & (! data_wire[4..4])), (w_anode3739w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3753w[] = ( (w_anode3753w[2..2] & (! w_data3737w[2..2])), (w_anode3753w[1..1] & (! w_data3737w[1..1])), (w_anode3753w[0..0] & (! w_data3737w[0..0])), w_anode3739w[2..2]);
	w_anode3770w[] = ( (w_anode3770w[2..2] & (! w_data3737w[2..2])), (w_anode3770w[1..1] & (! w_data3737w[1..1])), (w_anode3770w[0..0] & w_data3737w[0..0]), w_anode3739w[2..2]);
	w_anode3780w[] = ( (w_anode3780w[2..2] & (! w_data3737w[2..2])), (w_anode3780w[1..1] & w_data3737w[1..1]), (w_anode3780w[0..0] & (! w_data3737w[0..0])), w_anode3739w[2..2]);
	w_anode3790w[] = ( (w_anode3790w[2..2] & (! w_data3737w[2..2])), (w_anode3790w[1..1] & w_data3737w[1..1]), (w_anode3790w[0..0] & w_data3737w[0..0]), w_anode3739w[2..2]);
	w_anode3800w[] = ( (w_anode3800w[2..2] & w_data3737w[2..2]), (w_anode3800w[1..1] & (! w_data3737w[1..1])), (w_anode3800w[0..0] & (! w_data3737w[0..0])), w_anode3739w[2..2]);
	w_anode3810w[] = ( (w_anode3810w[2..2] & w_data3737w[2..2]), (w_anode3810w[1..1] & (! w_data3737w[1..1])), (w_anode3810w[0..0] & w_data3737w[0..0]), w_anode3739w[2..2]);
	w_anode3820w[] = ( (w_anode3820w[2..2] & w_data3737w[2..2]), (w_anode3820w[1..1] & w_data3737w[1..1]), (w_anode3820w[0..0] & (! w_data3737w[0..0])), w_anode3739w[2..2]);
	w_anode3830w[] = ( (w_anode3830w[2..2] & w_data3737w[2..2]), (w_anode3830w[1..1] & w_data3737w[1..1]), (w_anode3830w[0..0] & w_data3737w[0..0]), w_anode3739w[2..2]);
	w_anode3842w[] = ( (w_anode3842w[1..1] & (! data_wire[4..4])), (w_anode3842w[0..0] & data_wire[3..3]), B"1");
	w_anode3852w[] = ( (w_anode3852w[2..2] & (! w_data3737w[2..2])), (w_anode3852w[1..1] & (! w_data3737w[1..1])), (w_anode3852w[0..0] & (! w_data3737w[0..0])), w_anode3842w[2..2]);
	w_anode3863w[] = ( (w_anode3863w[2..2] & (! w_data3737w[2..2])), (w_anode3863w[1..1] & (! w_data3737w[1..1])), (w_anode3863w[0..0] & w_data3737w[0..0]), w_anode3842w[2..2]);
	w_anode3873w[] = ( (w_anode3873w[2..2] & (! w_data3737w[2..2])), (w_anode3873w[1..1] & w_data3737w[1..1]), (w_anode3873w[0..0] & (! w_data3737w[0..0])), w_anode3842w[2..2]);
	w_anode3883w[] = ( (w_anode3883w[2..2] & (! w_data3737w[2..2])), (w_anode3883w[1..1] & w_data3737w[1..1]), (w_anode3883w[0..0] & w_data3737w[0..0]), w_anode3842w[2..2]);
	w_anode3893w[] = ( (w_anode3893w[2..2] & w_data3737w[2..2]), (w_anode3893w[1..1] & (! w_data3737w[1..1])), (w_anode3893w[0..0] & (! w_data3737w[0..0])), w_anode3842w[2..2]);
	w_anode3903w[] = ( (w_anode3903w[2..2] & w_data3737w[2..2]), (w_anode3903w[1..1] & (! w_data3737w[1..1])), (w_anode3903w[0..0] & w_data3737w[0..0]), w_anode3842w[2..2]);
	w_anode3913w[] = ( (w_anode3913w[2..2] & w_data3737w[2..2]), (w_anode3913w[1..1] & w_data3737w[1..1]), (w_anode3913w[0..0] & (! w_data3737w[0..0])), w_anode3842w[2..2]);
	w_anode3923w[] = ( (w_anode3923w[2..2] & w_data3737w[2..2]), (w_anode3923w[1..1] & w_data3737w[1..1]), (w_anode3923w[0..0] & w_data3737w[0..0]), w_anode3842w[2..2]);
	w_anode3934w[] = ( (w_anode3934w[1..1] & data_wire[4..4]), (w_anode3934w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3944w[] = ( (w_anode3944w[2..2] & (! w_data3737w[2..2])), (w_anode3944w[1..1] & (! w_data3737w[1..1])), (w_anode3944w[0..0] & (! w_data3737w[0..0])), w_anode3934w[2..2]);
	w_anode3955w[] = ( (w_anode3955w[2..2] & (! w_data3737w[2..2])), (w_anode3955w[1..1] & (! w_data3737w[1..1])), (w_anode3955w[0..0] & w_data3737w[0..0]), w_anode3934w[2..2]);
	w_anode3965w[] = ( (w_anode3965w[2..2] & (! w_data3737w[2..2])), (w_anode3965w[1..1] & w_data3737w[1..1]), (w_anode3965w[0..0] & (! w_data3737w[0..0])), w_anode3934w[2..2]);
	w_anode3975w[] = ( (w_anode3975w[2..2] & (! w_data3737w[2..2])), (w_anode3975w[1..1] & w_data3737w[1..1]), (w_anode3975w[0..0] & w_data3737w[0..0]), w_anode3934w[2..2]);
	w_anode3985w[] = ( (w_anode3985w[2..2] & w_data3737w[2..2]), (w_anode3985w[1..1] & (! w_data3737w[1..1])), (w_anode3985w[0..0] & (! w_data3737w[0..0])), w_anode3934w[2..2]);
	w_anode3995w[] = ( (w_anode3995w[2..2] & w_data3737w[2..2]), (w_anode3995w[1..1] & (! w_data3737w[1..1])), (w_anode3995w[0..0] & w_data3737w[0..0]), w_anode3934w[2..2]);
	w_anode4005w[] = ( (w_anode4005w[2..2] & w_data3737w[2..2]), (w_anode4005w[1..1] & w_data3737w[1..1]), (w_anode4005w[0..0] & (! w_data3737w[0..0])), w_anode3934w[2..2]);
	w_anode4015w[] = ( (w_anode4015w[2..2] & w_data3737w[2..2]), (w_anode4015w[1..1] & w_data3737w[1..1]), (w_anode4015w[0..0] & w_data3737w[0..0]), w_anode3934w[2..2]);
	w_anode4026w[] = ( (w_anode4026w[1..1] & data_wire[4..4]), (w_anode4026w[0..0] & data_wire[3..3]), B"1");
	w_anode4036w[] = ( (w_anode4036w[2..2] & (! w_data3737w[2..2])), (w_anode4036w[1..1] & (! w_data3737w[1..1])), (w_anode4036w[0..0] & (! w_data3737w[0..0])), w_anode4026w[2..2]);
	w_anode4047w[] = ( (w_anode4047w[2..2] & (! w_data3737w[2..2])), (w_anode4047w[1..1] & (! w_data3737w[1..1])), (w_anode4047w[0..0] & w_data3737w[0..0]), w_anode4026w[2..2]);
	w_anode4057w[] = ( (w_anode4057w[2..2] & (! w_data3737w[2..2])), (w_anode4057w[1..1] & w_data3737w[1..1]), (w_anode4057w[0..0] & (! w_data3737w[0..0])), w_anode4026w[2..2]);
	w_anode4067w[] = ( (w_anode4067w[2..2] & (! w_data3737w[2..2])), (w_anode4067w[1..1] & w_data3737w[1..1]), (w_anode4067w[0..0] & w_data3737w[0..0]), w_anode4026w[2..2]);
	w_anode4077w[] = ( (w_anode4077w[2..2] & w_data3737w[2..2]), (w_anode4077w[1..1] & (! w_data3737w[1..1])), (w_anode4077w[0..0] & (! w_data3737w[0..0])), w_anode4026w[2..2]);
	w_anode4087w[] = ( (w_anode4087w[2..2] & w_data3737w[2..2]), (w_anode4087w[1..1] & (! w_data3737w[1..1])), (w_anode4087w[0..0] & w_data3737w[0..0]), w_anode4026w[2..2]);
	w_anode4097w[] = ( (w_anode4097w[2..2] & w_data3737w[2..2]), (w_anode4097w[1..1] & w_data3737w[1..1]), (w_anode4097w[0..0] & (! w_data3737w[0..0])), w_anode4026w[2..2]);
	w_anode4107w[] = ( (w_anode4107w[2..2] & w_data3737w[2..2]), (w_anode4107w[1..1] & w_data3737w[1..1]), (w_anode4107w[0..0] & w_data3737w[0..0]), w_anode4026w[2..2]);
	w_data3737w[2..0] = data_wire[2..0];
END;
--VALID FILE
