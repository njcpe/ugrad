;
;Name:			Noah Johnson
;Course Number: 	ELE 209
;Lab/Problem Number:	Lab 7a (Pt 2)
;Due Date:		4/13/15
;;; File: lab7a_2.asm
	
	.ORIG x3000
        
ReadString
        LEA     R0, Prompt
        PUTS                    ; Display a prompt requesting input
        LD      R1, InBuffLen   ; Set R1 to length of input buffer
        LEA     R2, InBuffPtr   ; Set R2 to address of input buffer in memory
        BRnzp   ReadCore        ; Goto the core input code
Prompt                          
        .STRINGZ "Enter a number: " ; The prompt string
InBuffLen
        .FILL 10                ; The length of the input buffer
InBuffPtr
        .BLKW 10                ; The memory reserved for the input buffer
NegEnter
	.FILL -13
CapsCheck
	.FILL -97	
Capitalize
	.FILL -32
ReadCore
	ADD	R1,R1,#-1	
ReadCoreBody
	GETC
	LD	R3, NegEnter
	ADD	R3, R0, R3
	BRz	ProcessInput
	LD	R4, CapsCheck
	ADD	R4, R0, R4
	BRzp	CapsCorrect
	OUT
	STR	R0, R2, #0
	ADD	R2, R2, #1
	ADD	R1, R1, #-1
	BRz	ProcessInput
	BRnzp	ReadCoreBody
CapsCorrect
	LD	R4, Capitalize
	ADD 	R0, R0, R4
	OUT
	STR	R0, R2, #0
	ADD	R2, R2, #1
	ADD	R1, R1, #-1
	BRz	ProcessInput
	BRnzp	ReadCoreBody
ProcessInput
        LEA     R2, InBuffPtr   ; Set R2 to address of buffer in memory
        BRnzp   ProcessInputCore
NegCheck
	.FILL	-45
HexCheck
	.FILL	-88
DecCheck
	.FILL	-35
ProcessInputCore
	AND	R1, R1, #0
	LD 	R3, NegCheck
	LDR	R0, R2, #0
	ADD	R3, R0, R3
	BRz	NegConv
	LD	R3, HexCheck
	LDR	R0, R2, #0
	ADD	R3, R0, R3
	BRz	HexConv
	BRnzp	DecConv
NegConv
	ADD	R1, R1, #-1
	ADD	R2, R2, #1
	LD	R3, HexCheck
	LDR	R0, R2, #0
	ADD	R3, R0, R3
	BRz	HexConv
	LD	R3, DecCheck
	ADD	R3, R0, R3
	ADD	R2, R2, #1
	BRz	DecConv
HexConv
	ADD	R2, R2, #1
	BRnzp	ParseHex
DecConv
	BRnzp	ParseDecimal
ParseHex
        LEA     R0, HexStr
        PUTS                    ; Output the string "hex"
        BRnzp   ParseCommon
ParseDecimal
        LEA     R0, DecimalStr
        PUTS                    ; Output the string "decimal"
ParseCommon        
        ADD     R1, R1, #0      ; Check if negative
        BRzp    NotNeg
        LEA     R0, MinusStr    
        PUTS                    ; If negative output string "negative"
NotNeg
        ADD     R0, R2, #0
        PUTS                    ; Output the number
        LEA     R0, EndOfLineStr   
        PUTS                    ; Output the a newline after the result
        BRnzp   ReadString

MinusStr
        .STRINGZ "negative "
HexStr
        .STRINGZ "Answer: hex "
DecimalStr
        .STRINGZ "Answer: decimal "
EndOfLineStr
        .STRINGZ "\n"           ; A newline

        .END
